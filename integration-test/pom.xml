<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright Terracotta, Inc.
  ~ Copyright IBM Corp. 2024, 2025
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.terracotta</groupId>
    <artifactId>angela-root</artifactId>
    <version>3.3.41-SNAPSHOT</version>
  </parent>

  <artifactId>integration-test</artifactId>
  <name>angela-integration-test</name>

  <properties>
    <ehcache.version.xml>3.8.1</ehcache.version.xml>
    <ehcache.version.dc>3.9.9</ehcache.version.dc>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.ehcache</groupId>
      <artifactId>ehcache-clustered</artifactId>
      <version>${ehcache.version.xml}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.terracotta</groupId>
      <artifactId>angela</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sshd</groupId>
      <artifactId>sshd-sftp</artifactId>
      <version>2.8.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <!-- This is required to pass the 'terracotta.version' from the pom, via the versions.properties resource -->
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <version>1.13.0</version>
        <executions>
          <execution>
            <id>fake-hosts</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scripts>
            <!--
                Create a custom /etc/hosts for our test to simulate a new hostname that angela will see as being a remote host.
                Angela considers localhost, 127.0.0.1 and the LAN machine IP address to be the same "local" machine.
                So to test SSH locally, we can simulate a new hostname.
             -->
            <script><![CDATA[
new File(project.build.directory, "fake-hosts.txt").text = """
127.0.0.1 localhost ${"hostname".execute().text.trim()} ${"hostname".execute().text.trim().split('[.]')[0]} testhostname
${InetAddress.getByName("oss.sonatype.org").getHostAddress()} oss.sonatype.org
"""
println(new File(project.build.directory, "fake-hosts.txt").text)
          ]]></script>
          </scripts>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.groovy</groupId>
            <artifactId>groovy</artifactId>
            <version>4.0.17</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <jdkToolchain>
            <version>1.11</version>
          </jdkToolchain>
          <trimStackTrace>false</trimStackTrace>
          <reuseForks>false</reuseForks>
          <useModulePath>false</useModulePath>
          <systemPropertyVariables>
            <angela.rootDir>${project.build.directory}/angela</angela.rootDir>
            <angela.skipUninstall>false</angela.skipUninstall>
            <angela.kitCopy>false</angela.kitCopy>
            <angela.tsa.fullLogging>true</angela.tsa.fullLogging>
            <angela.java.resolver>user</angela.java.resolver>
            <angela.igniteLogging>false</angela.igniteLogging>
            <angela.agent.debug>false</angela.agent.debug>
            <angela.ssh.strictHostKeyChecking>false</angela.ssh.strictHostKeyChecking>
            <!-- Required on Azure since there is no SSH setup. -->
            <!-- This private key is just randomly generated password-less. -->
            <angela.ssh.userName.keyPath>src/test/resources/ssh/id_rsa</angela.ssh.userName.keyPath>
            <angela.java.opts>
              -Dangela.agent.debug=false
              -Djdk.net.hosts.file=${project.build.directory}/fake-hosts.txt
              -DIGNITE_UPDATE_NOTIFIER=false
            </angela.java.opts>
            <jdk.security.allowNonCaAnchor>true</jdk.security.allowNonCaAnchor>
            <!-- tells the JDK to use this file instead of /etc/hosts -->
            <jdk.net.hosts.file>${project.build.directory}/fake-hosts.txt</jdk.net.hosts.file>
            <IGNITE_UPDATE_NOTIFIER>false</IGNITE_UPDATE_NOTIFIER>
            <ehcache.version.xml>${ehcache.version.xml}</ehcache.version.xml>
            <ehcache.version.dc>${ehcache.version.dc}</ehcache.version.dc>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>java-17</id>
      <activation>
        <property>
          <name>java.test.version</name>
          <value>1.17</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <argLine>
                --add-opens=java.base/jdk.internal.access=ALL-UNNAMED
                --add-opens=java.base/jdk.internal.misc=ALL-UNNAMED
                --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
                --add-opens=java.base/sun.util.calendar=ALL-UNNAMED
                --add-opens=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED
                --add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED
                --add-opens=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED
                --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
                --add-opens=java.base/java.io=ALL-UNNAMED
                --add-opens=java.base/java.nio=ALL-UNNAMED
                --add-opens=java.base/java.net=ALL-UNNAMED
                --add-opens=java.base/java.util=ALL-UNNAMED
                --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
                --add-opens=java.base/java.util.concurrent.locks=ALL-UNNAMED
                --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED
                --add-opens=java.base/java.lang=ALL-UNNAMED
                --add-opens=java.base/java.lang.invoke=ALL-UNNAMED
                --add-opens=java.base/java.math=ALL-UNNAMED
                --add-opens=java.sql/java.sql=ALL-UNNAMED
                --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
                --add-opens=java.base/java.time=ALL-UNNAMED
                --add-opens=java.base/java.text=ALL-UNNAMED
                --add-opens=java.management/sun.management=ALL-UNNAMED
                --add-opens java.desktop/java.awt.font=ALL-UNNAMED
              </argLine>
              <systemPropertyVariables>
                <angela.java.opts>
                  --add-opens=java.base/jdk.internal.access=ALL-UNNAMED
                  --add-opens=java.base/jdk.internal.misc=ALL-UNNAMED
                  --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
                  --add-opens=java.base/sun.util.calendar=ALL-UNNAMED
                  --add-opens=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED
                  --add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED
                  --add-opens=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED
                  --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
                  --add-opens=java.base/java.io=ALL-UNNAMED
                  --add-opens=java.base/java.nio=ALL-UNNAMED
                  --add-opens=java.base/java.net=ALL-UNNAMED
                  --add-opens=java.base/java.util=ALL-UNNAMED
                  --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
                  --add-opens=java.base/java.util.concurrent.locks=ALL-UNNAMED
                  --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED
                  --add-opens=java.base/java.lang=ALL-UNNAMED
                  --add-opens=java.base/java.lang.invoke=ALL-UNNAMED
                  --add-opens=java.base/java.math=ALL-UNNAMED
                  --add-opens=java.sql/java.sql=ALL-UNNAMED
                  --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
                  --add-opens=java.base/java.time=ALL-UNNAMED
                  --add-opens=java.base/java.text=ALL-UNNAMED
                  --add-opens=java.management/sun.management=ALL-UNNAMED
                  --add-opens java.desktop/java.awt.font=ALL-UNNAMED
                  -Dangela.agent.debug=false
                  -Djdk.net.hosts.file=${project.build.directory}/fake-hosts.txt
                  -DIGNITE_UPDATE_NOTIFIER=false
                </angela.java.opts>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
